{"ast":null,"code":"export default async function http(request) {\n  var _headers$get;\n\n  const response = await fetch(request);\n\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n\n  const headers = response.headers;\n  const data = (_headers$get = headers.get('content-type')) !== null && _headers$get !== void 0 && _headers$get.includes('json') ? await response.json() : {};\n  return data;\n}\nlet token = '';\nexport const setToken = newToken => token = newToken;\nexport async function get(path) {\n  return await http(new Request(path, {\n    headers: { ...(token && {\n        Authorization: `Bearer ${token}`\n      }),\n      'Content-Type': 'application/json'\n    },\n    method: 'get'\n  }));\n}\nexport async function put(path, body) {\n  return await http(new Request(path, {\n    headers: { ...(token && {\n        Authorization: `Bearer ${token}`\n      }),\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body),\n    method: 'put'\n  }));\n}\nexport async function post(path, body) {\n  return await http(new Request(path, {\n    headers: { ...(token && {\n        Authorization: `Bearer ${token}`\n      }),\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body),\n    method: 'post'\n  }));\n}\nexport async function del(path) {\n  return await http(new Request(path, {\n    headers: { ...(token && {\n        Authorization: `Bearer ${token}`\n      }),\n      'Content-Type': 'application/json'\n    },\n    method: 'delete'\n  }));\n}","map":{"version":3,"names":["http","request","response","fetch","ok","Error","statusText","headers","data","get","includes","json","token","setToken","newToken","path","Request","Authorization","method","put","body","JSON","stringify","post","del"],"sources":["/home/mark/A3/Gomoku_React/gomoku/src/utils/http.ts"],"sourcesContent":["export default async function http<T>(request: RequestInfo): Promise<T> {\n    const response = await fetch(request)\n    if (!response.ok) {\n        throw new Error(response.statusText)\n    }\n    const headers = response.headers\n    const data = headers.get('content-type')?.includes('json')\n        ? await response.json()\n        : {}\n    return data\n}\n\nlet token = ''\nexport const setToken = (newToken: string) => (token = newToken)\n\nexport async function get<Res>(path: string): Promise<Res> {\n    return await http<Res>(\n        new Request(path, {\n            headers: {\n                ...(token && { Authorization: `Bearer ${token}` }),\n                'Content-Type': 'application/json',\n            },\n            method: 'get',\n        })\n    )\n}\n\nexport async function put<Req, Res>(path: string, body: Req): Promise<Res> {\n    return await http<Res>(\n        new Request(path, {\n            headers: {\n                ...(token && { Authorization: `Bearer ${token}` }),\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body),\n            method: 'put',\n        })\n    )\n}\n\nexport async function post<Req, Res>(path: string, body: Req): Promise<Res> {\n    return await http<Res>(\n        new Request(path, {\n            headers: {\n                ...(token && { Authorization: `Bearer ${token}` }),\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body),\n            method: 'post',\n        })\n    )\n}\n\nexport async function del(path: string): Promise<undefined | null> {\n    return await http<undefined | null>(\n        new Request(path, {\n            headers: {\n                ...(token && { Authorization: `Bearer ${token}` }),\n                'Content-Type': 'application/json',\n            },\n            method: 'delete',\n        })\n    )\n}"],"mappings":"AAAA,eAAe,eAAeA,IAAf,CAAuBC,OAAvB,EAAyD;EAAA;;EACpE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,OAAD,CAA5B;;EACA,IAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;IACd,MAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAN;EACH;;EACD,MAAMC,OAAO,GAAGL,QAAQ,CAACK,OAAzB;EACA,MAAMC,IAAI,GAAG,gBAAAD,OAAO,CAACE,GAAR,CAAY,cAAZ,uDAA6BC,QAA7B,CAAsC,MAAtC,IACP,MAAMR,QAAQ,CAACS,IAAT,EADC,GAEP,EAFN;EAGA,OAAOH,IAAP;AACH;AAED,IAAII,KAAK,GAAG,EAAZ;AACA,OAAO,MAAMC,QAAQ,GAAIC,QAAD,IAAuBF,KAAK,GAAGE,QAAhD;AAEP,OAAO,eAAeL,GAAf,CAAwBM,IAAxB,EAAoD;EACvD,OAAO,MAAMf,IAAI,CACb,IAAIgB,OAAJ,CAAYD,IAAZ,EAAkB;IACdR,OAAO,EAAE,EACL,IAAIK,KAAK,IAAI;QAAEK,aAAa,EAAG,UAASL,KAAM;MAAjC,CAAb,CADK;MAEL,gBAAgB;IAFX,CADK;IAKdM,MAAM,EAAE;EALM,CAAlB,CADa,CAAjB;AASH;AAED,OAAO,eAAeC,GAAf,CAA6BJ,IAA7B,EAA2CK,IAA3C,EAAoE;EACvE,OAAO,MAAMpB,IAAI,CACb,IAAIgB,OAAJ,CAAYD,IAAZ,EAAkB;IACdR,OAAO,EAAE,EACL,IAAIK,KAAK,IAAI;QAAEK,aAAa,EAAG,UAASL,KAAM;MAAjC,CAAb,CADK;MAEL,gBAAgB;IAFX,CADK;IAKdQ,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf,CALQ;IAMdF,MAAM,EAAE;EANM,CAAlB,CADa,CAAjB;AAUH;AAED,OAAO,eAAeK,IAAf,CAA8BR,IAA9B,EAA4CK,IAA5C,EAAqE;EACxE,OAAO,MAAMpB,IAAI,CACb,IAAIgB,OAAJ,CAAYD,IAAZ,EAAkB;IACdR,OAAO,EAAE,EACL,IAAIK,KAAK,IAAI;QAAEK,aAAa,EAAG,UAASL,KAAM;MAAjC,CAAb,CADK;MAEL,gBAAgB;IAFX,CADK;IAKdQ,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf,CALQ;IAMdF,MAAM,EAAE;EANM,CAAlB,CADa,CAAjB;AAUH;AAED,OAAO,eAAeM,GAAf,CAAmBT,IAAnB,EAA4D;EAC/D,OAAO,MAAMf,IAAI,CACb,IAAIgB,OAAJ,CAAYD,IAAZ,EAAkB;IACdR,OAAO,EAAE,EACL,IAAIK,KAAK,IAAI;QAAEK,aAAa,EAAG,UAASL,KAAM;MAAjC,CAAb,CADK;MAEL,gBAAgB;IAFX,CADK;IAKdM,MAAM,EAAE;EALM,CAAlB,CADa,CAAjB;AASH"},"metadata":{},"sourceType":"module"}